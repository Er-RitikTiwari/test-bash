name: MERN App CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: [self-hosted]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create zip of new code
      run: |
        zip -r new_code.zip . -x "*.git*" "node_modules/*"
        
    - name: Start SSH agent and add key
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        
    # - name: Copy new zip to remote VM
    #   run: |
    #     sshpass -p "${{ secrets.VM_PASSWORD }}" rsync -avz \
    #     -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
    #     new_code.zip \
    #     azureuser@10.0.0.4:~/backup/newChanges/
    - name: Delete the old code from the vm
      run: |
        ssh azureuser@20.63.24.50 'ssh azureuser@10.0.0.4 "rm -r /home/azureuser/backup/newChanges/*"'
        
    - name: Send new zip to VM (via bastion)
      run: |
        sshpass -p "${{ secrets.VM_PASSWORD }}" rsync -avz -e "ssh -A -J azureuser@20.63.24.50 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" \
        new_code.zip \
        azureuser@10.0.0.4:~/backup/newChanges/

    - name: ssh to vm and run backup + deploy script
      run: |
       ssh azureuser@20.63.24.50 << 'EOF1'
        ssh azureuser@10.0.0.4 << 'EOF2'
          set -e
          echo "Zipping current git_app_1 to lastBackup..."
          cd ~
          DATE=$(date +%Y-%m-%d)
          zip -r backup/lastBackup/old_code_$DATE.zip git_app_1

          echo "Removing current git_app_1 folder..."
          rm -rf git_app_1

          echo "Extracting new code..."
          unzip backup/newChanges/new_code.zip -d git_app_1

          echo "Installing and building..."
          cd git_app_1
          npm install
          npm run build
          sudo systemctl restart nginx
       EOF2
       EOF1

      


    # - name: SSH to VM and run backup + deploy script
    #   run: |
    #     ssh -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }} \
    #       ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
    #         set -e
    #         echo "Zipping current git_app_1 to lastBackup..."
    #         cd ~
    #         rm -f backup/lastBackup/old_code.zip
    #         zip -r backup/lastBackup/old_code.zip git_app_1

    #         echo "Removing current git_app_1 folder..."
    #         rm -rf git_app_1

    #         echo "Extracting new code..."
    #         unzip backup/newChanges/new_code.zip -d git_app_1

    #         echo "Installing and building..."
    #         cd git_app_1
    #         npm install
    #         npm run build
    #         sudo systemctl restart nginx
    #     EOF



# name: Deploy via Self-hosted Runner

# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:
#     runs-on: [self-hosted]

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: List files in private VM via Bastion
#       run: |
#         ssh private-vm "ls"

# jobs:
#   basion-buld-deploy:
#     runs-on: [self-hosted]
    
#     steps:
#     - name: ssh to the basion
#       run: |
        # ssh azureuser@20.63.24.50 'ssh azureuser@10.0.0.4 "ls"'
    # - name: ssh to the basion
    #   run: |
    #     ssh azureuser@10.0.0.4
    #     ls
  
    # - name: Checkout code
    #   uses: actions/checkout@v3

    # - name: check code
    #   run : |
    #    pwd
  
    # - name: Tar the source code
    #   run: |
    #     tar -czf git_app_1.tar.gz .
        
    # - name: Backup the sorce code file from the vm
    #   run: |
        
    #     echo "backup the soruce code in vm..."
        # ssh azureuser@20.63.24.50 'ssh azureuser@10.0.0.4 "mv -r ./git_app_1 ./backup/lastBackup/"'
    #     echo "remove the real code from the vm..."
    #     scp -r ./git_app_1.tar.gz "ssh azureuser@20.63.24.50 'ssh azureuser@10.0.0.4 "/home/azureuser/backup/newChanges"'"
        
    
   

        
    #     echo "ssh to basion server..."
    #     ssh azuresuer@20.63.24.50
    #     ssh azureuser@10.0.0.4
        
    #     echo " Copy dist to Bastion server..."
    #     scp -r ./dist azureuser@20.63.24.50:/home/azureuser/
    #     echo " Remove old dist from Private VM..."
    #     ssh azureuser@20.63.24.50 'ssh azureuser@10.0.0.4 "rm -rf /home/azureuser/git_app_1/dist"'
    #     echo "Copy new dist from Bastion to Private VM..."
    #     ssh azureuser@20.63.24.50 'scp -r /home/azureuser/dist azureuser@10.0.0.4:/home/azureuser/git_app_1/'
    #     echo "Remove dist from Bastion server..."
    #     ssh azureuser@20.63.24.50 'rm -rf /home/azureuser/dist'
  

    # - name: Restart Nginx on Private VM
    #   run: |
    #     echo "Restarting Nginx on Private VM....."
    #     ssh azureuser@20.63.24.50 'ssh azureuser@10.0.0.4 "sudo systemctl restart nginx"'
